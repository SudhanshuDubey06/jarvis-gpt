<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>JARVIS GPT Assistant</title>
  <style>
    body {
      background: #111;
      color: #0f0;
      font-family: 'Courier New', monospace;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 30px;
      margin: 0;
    }
    h1 {
      color: #0ff;
    }
    #chat {
      width: 100%;
      max-width: 600px;
      height: 400px;
      border: 2px solid #0ff;
      padding: 12px;
      overflow-y: auto;
      background: rgba(0,255,255,0.1);
      margin-bottom: 16px;
    }
    #inputBox {
      width: 100%;
      max-width: 600px;
      display: flex;
    }
    input {
      flex: 1;
      padding: 10px;
      font-size: 1rem;
      border: none;
      outline: none;
      color: #000;
    }
    button {
      margin-left: 8px;
      padding: 10px 16px;
      background: #0ff;
      border: none;
      cursor: pointer;
      color: #000;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <h1>Hey, I'm JARVIS GPT.</h1>
  <div id="chat"></div>
  <div id="inputBox">
    <input id="userInput" type="text" placeholder="Ask me anything..."/>
    <button onclick="send()">Send</button>
    <button onclick="voice()">ðŸŽ¤</button>
  </div>
  <script>
    const chat = document.getElementById('chat');
    function append(sender, msg) {
      const el = document.createElement('div');
      el.innerHTML = '<strong>' + sender + ':</strong> ' + msg;
      chat.appendChild(el);
      chat.scrollTop = chat.scrollHeight;
    }
    async function send() {
      const inp = document.getElementById('userInput');
      const txt = inp.value.trim();
      if (!txt) return;
      append('You', txt);
      inp.value = '';
      try {
        const res = await fetch(
          'https://api.openai.com/v1/chat/completions',
          {
            method: 'POST',
            headers: {
              'Authorization': 'Bearer YOUR_API_KEY',
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              model: 'gpt-3.5-turbo',
              messages: [{ role: 'user', content: txt }]
            })
          }
        );
        const data = await res.json();
        const reply = data.choices[0].message.content;
        append('JARVIS', reply);
        speak(reply);
      } catch (e) {
        append('JARVIS', 'Sorry, something went wrong.');
        console.error(e);
      }
    }
    function speak(text) {
      const t = new SpeechSynthesisUtterance(text);
      window.speechSynthesis.speak(t);
    }
    function voice() {
      const rec = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
      rec.lang = 'en-US';
      rec.start();
      rec.onresult = e => {
        const spoken = e.results[0][0].transcript;
        document.getElementById('userInput').value = spoken;
        send();
      };
    }
  </script>
</body>
</html>
